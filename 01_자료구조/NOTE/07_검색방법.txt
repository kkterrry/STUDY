- DAY08 검색 -

검색방법
1. 수행위치에 따른 분류
	- 내부 검색 : 메모리의 자료에 대해서 검색
	- 외부 검색 : 보조기억장치에 있는 자료에 대한 검색

2. 검색방식에 따른 분류
	- 비교 검색 : 검색대상의 키를 비교하여 검색(순차, 이진, 트리검색)
	- 계산 검색 : 계수적인 성질을 이용한 검색(해싱)

순차검색
	1. 일렬로 된 자료를 처음부터 끝까지 순서대로 검색
	2. 가장 간단하고 직접적인 방법
	3. 배열이나 연결리스트로 구현된 자료구조에서 검색
	4. 검색대상이 없으면 비효율적이지만 알고리즘은 단순

이진검색
	- 자료의 가운데에 있는 항목을 키값과 비교하여 다음 검색 위치를 결정하여 검색을 계속하는 방법
		1. 찾는 키값 > 원소의 키값 : 오른쪽 부분에 대해서 검색
		2. 찾는 키값 < 원소의 키값 : 왼쪽 부분에 대해서 검색
	- 키 값을 찾을때 까지 이진검색을 순환적으로 반복 수행함으로써 검색의 범위를 반으로 줄여가면서 빠르게 검색

	- 알고리즘

트리
	- 노드 : 트리의 원소
	- 루트 노드 : 트리의 시작 노드
	- 간선 : 노드를 연결하는 선, 부모 노드와 자식 노드를 연결
	- 형제노드 : 같은 부모 노드의 자식 노드들
	- 조상노드 : 간선을 따라 루트 노드까지 경로에 있는 모든 노드들
	- 서브트리 : 부모노드와 연결된 간선을 끊었을때 생성되는 트리
	- 자손노드 : 서브트리에 있는 하위 레벨의 노드들
	- 차수
		- 노드의 차수 : 노드에 연결된 자식 노드의 수
		- 트리의 차수 : 트리에 있는 노드의 차수 중에서 가장 큰 값
		- 단말 노드 : 차수가 0인 노드, 자식 노드가 없는 노드
	- 높이
		- 노드의 높이 : 루트에서 노드에 이르는 간선의 수, 노드의 레벨
		- 트리의 높이 : 트리에 있는 노드의 높이 중에서 가장 큰 값
	- 포리스트 : 서브트리의 집합

이진트리
	- 트리의 모든 노드의 차수를 2이하로 제한하여 트리의 차수가 2이하가 되도록 정의
	- 이진트리으 모든 노드는 왼쪽 자식노드와 오른쪽 자식 노드만 가짐
	- 공백노드도 자식노드로 취급
	- 노드의 왼쪽 자식노드와 오른쪽 자식노드도 각각 루트로 하는 서브트리도 이진트리

	- 이진트리의 순회
		- 전위순회 : C -> L -> R
		- 중위순회 : L -> C -> R
		- 후위순회	 : L -> R -> C

이진탐색 트리
	- 이진 트리를 탐색용 자료구조로 사용하기 위해 원소 크기에 따라 노드의 위치를 정의한것
	- 모든 원소는 서로 다른 유일한 키를 갖는다.
	- 왼쪽 서브트리에 있는 원소들의 키는 그 루트의 키보다 작다.
	- 오른쪽 서브트리에 있는 원소들의 키는 그 루트의 키보다 크다.
	- 왼쪽 서브트리와 오른쪽 서브트리도 이진 트리다.

연산
	- 루트에서 시작
	- 탐색할 키값 X를 루트 노드의키값과 비교
		1. 키값 == 루트노드의 값 : 원소찾음
		2. 키값 < 루트노드의 값 : 루트노드의 왼쪽 서브트리에 대해서 탐색
		3. 키값 > 루트노드의 값 : 루트노드의 오른쪽 서브트리에 대해서 탐색
	- 서브틸에 대해서 순환적으로 탐색 반복

알고리즘

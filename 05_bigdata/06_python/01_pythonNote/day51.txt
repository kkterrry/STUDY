day 51
- 객체지향프로그래밍
  - static 변수(정적변수) : 여러 객체들 사이에 데이터를 공유하고 싶을 때 사용
    - static 변수 앞에 under score 2객()를 붙이면, 클래스명._클래스명static변수명이름으로 참조
- 예외처리
  - try:
    	예외가 발생할 수도 있는 문장
    except Error1:
    	해당 예외가 발생할 경우 실행할 문장
    except Error2:
    	해당 예외가 발생할 경우 실행할 문장
  - try:
        	예외가 발생할 수도 있는 문장
    except (ZeroDivisionError, ValueError) as e:
        	예외발생시 문장

  - try ~ except ~ (else ~) finally
  - raise 예외 : 예외를 발생시킨다
  - 추상클래스 : python은 추상클래스를 생성할 수 없으나 raise를 이용해서 추상클래스를 흉내냄
    - class Shape:
      	def __init__(self):
      		 raise NotImplementedError("추상클래스 역할")
      	def calc_area(self):
        		raise NotImplementedError
  - 파일 정리 작업
    - try:
    	f = open('data/ch08_abc.txt','r')
    	lines = f.readlines() # txt 파일을 한줄한줄 모든줄을 한꺼번에 읽어 list로 담음
    	print(lines)
      except FileNotFoundError as e:
    	print(e)
      finally:
    	f.close() # 제일 중요
    - with절 이후에는 자동적으로 파일 close()실행
      with open('data/ch08_abc.txt','r') as f:
    	lines = f.readlines()
    	print(lines)
    
- 파일io프로그래밍
  -  파일에 데이터 저장하고 불러오기
     with open('data/ch09_sample.txt','r', encoding='utf-8') as txtfile:
    	lines = txtfile.readlines() # 한꺼번에 여러 줄을 읽어 list
	for line in lines:
    	print(line, end='')
  - 피클을 이용한 객체 저장 및 불러오기
    - 피클링을 이용한 객체를 파일 저장
      import pickle
      with open('data/ch09_member.data','wb') as f:
    	pickle.dump(user_list, f)
    - 피클링 이용 파일 읽기
      with open('data/ch09_member.data','rb') as f:
    	ul = pickle.load(f)
	for u in ul:
    	print(u)
  - CSV 형식 파일 읽기/쓰기
    - reader
      - reader = csv.reader(f)
    - writer
      - writer = csv.writer(f) 
  - CSV파일의 자료를 딕셔너리 데이터로 읽기
    - reader
      - dict_reader = csv.DictReader(f)
    - writer
      - dict_writer = csv.DictWriter(f, fieldnames=fieldnames,
                                extrasaction='ignore') # fieldname에 없는 필드를 무시
                                # extrasaction='raise') # 없는 필드가 있으면 예외
  - csv파일을 데이터 프레임으로 read
    - import pandas as pd
	member = pd.read_csv('data/ch09_member3.csv', encoding='utf-8')
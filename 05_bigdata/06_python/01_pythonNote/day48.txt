day48
- 셋
  - 생성: {}, set()
  - 추가: .add()(단 리스트, 딕셔너리는 추가 불가)
            .update()(다 가능)(딕셔너리는 키값만 추가)
  - 제거: .remove()

- enumerate :  반복자 또는 순서 객체로 반복문을 처리할 때 인덱스 처리를 해결하는 함수
  - for idx, name in enumerate(L):
    print("{} : {}".format(idx,name))
  - for idx, (key, value) in enumerate(dic.items()):
    print("{}번째 {}키 값은 {}".format(idx, key, value))

- 조건문
  - if  elif  else
  - for 변수 in 나열가능한 자료:
    반복할 문장1
    반복할 문장2
    else:
    변수에 값이 할당되지 않은 경우 한번 실행할 문장(else구문은 선택사항) 
  - while 조건:
    반복할 문장1
    반복할 문장2
    else:
    조건이 거짓일 경우 한번 실행할 문장(else구문 선택사항)
  - 중첩포문 탈출
    - 방법1. 플래그 변수 이용
    - 방법2. Exception 이용
- 함수
  - 반복해서 사용할 코드를 묶어 놓고 그것에 이름을 붙인 것.
  - 오버로딩이 불가
  - 반복해서 사용할 코드는 함수를 이용하면 훨씬 구조적이고 간결한 코드 작성
  - 함수의 정의
    def 함수명([매개변수1, 매개변수2,....]):
         명령어1
         명령어2
  - __name__
    -  name이라는 변수는 내가 변수로 만든 것이 아니라 원래부터 파이썬에서 정한 '이미 있는' 변수라고 한다.
  - docstring
    - 함수의 첫라인에 독스트링을 포함할 수 있습니다.
      독스트링은 함수의 설명서를 달아주는 역할, 주석보다는 많은 기능
  - 지역변수와 전역변수
    - 랙시컬 특성
    - global g_var(전역변수 선언)
    - 값에 의한 호출 : 주소변함
    - 참조에 의한 호출: 주소 변하지 않음
  - 기본변수를 갖는 매개변수
    - 스칼라변수 -> 시점 1회
    - 리스트 셋 딕셔너리 객체 -> 






       
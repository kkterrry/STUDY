-- ★ 총 연습문제
--1. 사원테이블에서 가장 먼저 입사한 사람의 이름, 급여, 입사일
SELECT ENAME, SAL, HIREDATE FROM EMP 
    WHERE HIREDATE=(SELECT MIN(HIREDATE) FROM EMP);
-- 2. 회사에서 가장 급여가 적은 사람의 이름, 급여
SELECT ENAME, SAL FROM EMP 
    WHERE SAL=(SELECT MIN(SAL) FROM EMP);
-- 3. 회사 평균보다 급여를 많이 받는 사람의 이름, 급여, 부서코드
SELECT ENAME, SAL, DEPTNO FROM EMP 
    WHERE SAL>(SELECT AVG(SAL) FROM EMP);
--4. 회사 평균 이하의 급여를 받는 사람의 이름, 급여, 부서명
SELECT ENAME, SAL, DNAME FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND SAL<=(SELECT AVG(SAL) FROM EMP);
--5. SCOTT보다 먼저 입사한 사람의 이름, 급여, 입사일, 급여 등급
SELECT ENAME, SAL, HIREDATE, GRADE 
    FROM EMP, SALGRADE 
    WHERE SAL BETWEEN LOSAL AND HISAL
      AND HIREDATE<(SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT');
--6. 5번(SCOTT보다 먼저 입사한 사람의 이름, 급여, 입사일, 급여 등급)에 부서명 추가하고 
    --급여가 큰 순 정렬
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME 
    FROM EMP E, SALGRADE, DEPT D 
    WHERE SAL BETWEEN LOSAL AND HISAL AND 
        D.DEPTNO=E.DEPTNO AND 
        HIREDATE<(SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT')  
    ORDER BY SAL DESC;
--7. BLAKE 보다 급여가 많은 사원들의 사번, 이름, 급여
SELECT EMPNO, ENAME, SAL FROM EMP 
    WHERE SAL>(SELECT SAL FROM EMP WHERE ENAME='BLAKE');
--8. MILLER보다 늦게 입사한 사원의 사번, 이름, 입사일
SELECT EMPNO, ENAME, HIREDATE FROM EMP 
    WHERE HIREDATE > (SELECT HIREDATE FROM EMP 
                        WHERE ENAME='MILLER');
--9. 사원전체 평균 급여보다 급여가 많은 사원들의 사번, 이름, 급여
SELECT EMPNO, ENAME, SAL FROM EMP 
    WHERE SAL > (SELECT AVG(SAL) FROM EMP);
--10. CLARK와 같은 부서번호이며, 사번이 7698인 직원의 급여보다 많은 급여를 받는 사원들
        -- 사번, 이름, 급여
SELECT DEPTNO FROM EMP WHERE ENAME='CLARK'; -- 서브쿼리(CLARK의 부서번호)
SELECT SAL FROM EMP WHERE EMPNO=7698;  -- 서브쿼리(7698사번 직원의 급여)
SELECT EMPNO, ENAME, SAL FROM EMP 
    WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME='CLARK') 
    AND SAL > (SELECT SAL FROM EMP WHERE EMPNO=7698);
--11.  응용심화. CLARK와 같은 부서명이며, 사번이 7698인 직원의 급여보다 많은 급여를 
    -- 받는 사원들의 사번, 이름, 급여
SELECT DNAME FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND ENAME='CLARK';-- 서브쿼리1
SELECT SAL FROM EMP WHERE EMPNO=7698; -- 서브쿼리2
SELECT EMPNO, ENAME, SAL FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND 
        DNAME=(SELECT DNAME FROM EMP E, DEPT D 
            WHERE E.DEPTNO=D.DEPTNO AND ENAME='CLARK') 
        AND SAL > (SELECT SAL FROM EMP WHERE EMPNO=7698);
--12. BLAKE와 같은 부서에 있는 모든 사원의 이름과 입사일자
SELECT ENAME, HIREDATE FROM EMP 
    WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME='BLAKE');
--13. 평균 급여 이상을 받는 모든 종업원에 대해서 사원번호와 이름 단 급여가 많은 순으로 출력)
SELECT EMPNO, ENAME FROM EMP 
    WHERE SAL>=(SELECT AVG(SAL) FROM EMP) 
    ORDER BY SAL DESC;

-- ★ 3. 다중행 서브쿼리 ; IN, ALL, ANY=SOME, EXISTS
--(1) IN ; 서브쿼리 결과 중 하나라도 일치하면 참
-- 부서별로 입사일이 가장 늦은 사람의  이름, 입사일, 부서번호
SELECT DEPTNO, MAX(HIREDATE) FROM EMP GROUP BY DEPTNO; -- 다중행 서브쿼리
SELECT ENAME, HIREDATE, DEPTNO FROM EMP
  WHERE (DEPTNO,HIREDATE) IN (SELECT DEPTNO, MAX(HIREDATE) FROM EMP GROUP BY DEPTNO);
-- 급여가 3000이상 받는 사원이 소속된 부서에서 근무하는 사원의 모든 필드
SELECT DEPTNO FROM EMP WHERE SAL>=3000; -- 서브쿼리
SELECT * FROM EMP
  WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE SAL>=3000);
--(2)ALL ; 서브쿼리 결과가 모두 만족하면 참
SELECT SAL FROM EMP WHERE DEPTNO=30;
-- 30번 부서 급여들 모두보다 큰 경우 = 30번 부서 최대 급여보다 큰 경우
SELECT * FROM EMP
  WHERE SAL > ALL (SELECT SAL FROM EMP WHERE DEPTNO=30); -- 다중행 서브쿼리
  
SELECT * FROM EMP
  WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE DEPTNO=30); -- 단일행 서브쿼리
--(3)ANY=SOME ; 서브쿼리 결과 하나라도 만족하면 참
-- 30번 부서 급여들 하나만이라도 큰 경우 = 30번 부서 최소 급여보다 큰 경우
SELECT * FROM EMP
  WHERE SAL > ANY (SELECT SAL FROM EMP WHERE DEPTNO=30); -- 다중행 서브쿼리 
SELECT * FROM EMP
  WHERE SAL > (SELECT MIN(SAL) FROM EMP WHERE DETPTNO=30); -- 단일행 서브쿼리
--(4)EXISTS ; 서브쿼리가 존재하면 참
-- 직속부하가 있는 직원들의 사번, 이름, 급여
SELECT EMPNO, ENAME, SAL
  FROM EMP MANAGER
  WHERE EXISTS (SELECT * FROM EMP WHERE MANAGER.EMPNO=MGR); -- 서브쿼리
SELECT DISTINCT M.EMPNO, M.ENAME, M.SAL
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO; -- SELF JOIN
-- 말단사원의 모든 필드 출력
SELECT * FROM EMP MANAGER
  WHERE NOT EXISTS (SELECT * FROM EMP WHERE MANAGER.EMPNO=MGR); --서브쿼리
SELECT M.*
  FROM EMP W, EMP M
  WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL; -- SELF JOIN
-- ex1. 직급(job)이 MANAGER인 사람이 속한 부서의 부서번호와 지역명
SELECT DEPTNO FROM EMP WHERE JOB='MANAGER'; -- 서브쿼리
SELECT DEPTNO, LOC FROM DEPT
  WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE JOB='MANAGER'); -- 메인쿼리
-- ex2. 연봉이 3000이상인 사람들 중 연봉등급별 최고 연봉을 받는 사람들의 
        -- 사번, 이름, 직업, 입사일, 급여, 급여등급(4,5등급 최고SAL 누구냐)
SELECT GRADE, MAX(SAL)  FROM EMP, SALGRADE  
  WHERE SAL BETWEEN LOSAL AND HISAL AND SAL >= 3000
  GROUP BY GRADE; -- 서브쿼리
SELECT EMPNO, ENAME, JOB, HIREDATE, SAL, GRADE
  FROM EMP, SALGRADE
  WHERE SAL BETWEEN LOSAL AND HISAL  AND
    (GRADE, SAL) IN (SELECT GRADE, MAX(SAL)  FROM EMP, SALGRADE  
                      WHERE SAL BETWEEN LOSAL AND HISAL AND SAL >= 3000
                      GROUP BY GRADE); -- 메인쿼리

-- ex3. 입사분기별 최고연봉을 받는 사원의 
        -- 분기, 사번, 이름, job, 상사사번, 입사, 급여, 상여
SELECT HIREDATE, CEIL(TO_CHAR(HIREDATE, 'MM')/3) "분기" FROM EMP; -- 분기 구하는 식
SELECT CEIL(EXTRACT(MONTH FROM HIREDATE)/3) "QUARTER", MAX(SAL) FROM EMP
  GROUP BY CEIL(EXTRACT(MONTH FROM HIREDATE)/3); -- 서브쿼리
SELECT CEIL(EXTRACT(MONTH FROM HIREDATE)/3) "QUARTER", EMPNO, ENAME,
      JOB, MGR, HIREDATE, SAL, COMM
    FROM EMP
    WHERE (CEIL(EXTRACT(MONTH FROM HIREDATE)/3), SAL) 
      IN (SELECT CEIL(EXTRACT(MONTH FROM HIREDATE)/3), MAX(SAL) FROM EMP
                GROUP BY CEIL(EXTRACT(MONTH FROM HIREDATE)/3))
    ORDER BY QUARTER;
-- ex4. SALESMAN 모든 사원들보다 급여를 많이 받는 사원의 이름, 급여(ALL)
SELECT ENAME, SAL FROM EMP
  WHERE SAL > ALL (SELECT SAL FROM EMP WHERE JOB='SALESMAN');
SELECT ENAME, SAL FROM EMP
  WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN');
-- ex5. 급여가 3000미만인 사람중 최근 입사한 사원의 사번, 이름, 연봉, 입사일
SELECT MAX(HIREDATE) FROM EMP WHERE SAL<3000; -- 서브쿼리
SELECT EMPNO, ENAME, SAL*12+NVL(COMM,0) ANNUAL_SAL, HIREDATE
  FROM EMP
  WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP WHERE SAL<3000); -- 메인쿼리

-- ★ 총 연습문제
-- 14.  이름에 “T”가 있는 사원이 근무하는 부서에서 근무하는 모든 직원의 사원 번호,이름,급여(단 사번 순 출력)
SELECT EMPNO, ENAME, SAL FROM emp 
    WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE ENAME LIKE '%T%')
    ORDER BY EMPNO;
-- 15. 부서 위치가 Dallas인 모든 종업원에 대해 이름,업무,급여
SELECT ENAME, JOB, SAL FROM EMP 
    WHERE DEPTNO = (SELECT DEPTNO FROM DEPT 
                    WHERE INITCAP(LOC)='Dallas');
SELECT ENAME, JOB, SAL FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND INITCAP(LOC)='Dallas';
-- 16. EMP 테이블에서 King에게 보고하는 모든 사원의 이름과 급여
SELECT ENAME, SAL FROM EMP 
    WHERE MGR=(SELECT EMPNO FROM EMP WHERE INITCAP(ENAME)='King');

SELECT ENAME, SAL FROM EMP W 
    WHERE EXISTS (SELECT * FROM EMP 
                    WHERE EMPNO=W.MGR AND INITCAP(ENAME)='King');
-- 17. SALES부서 사원의 이름, 업무
SELECT ENAME, JOB FROM EMP
    WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME='SALES'); -- 서브쿼리 이용
SELECT ENAME, JOB FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND DNAME='SALES'; -- EQUI JOIN 이용
-- 18. 월급이 부서 30의 최저 월급보다 높은 사원의 모든 필드
SELECT * FROM EMP 
    WHERE SAL>(SELECT MIN(SAL)  FROM EMP WHERE DEPTNO=30); -- 단일행서브쿼리
SELECT * FROM EMP 
    WHERE SAL > ANY (SELECT sal  FROM EMP WHERE DEPTNO=30); -- 다중행서브쿼리
-- 19. 부서 10에서 부서 30의 사원과 같은 업무를 맡고 있는 사원의 이름과 업무
SELECT ENAME, JOB FROM EMP WHERE DEPTNO=10 AND 
            JOB IN (SELECT JOB FROM EMP WHERE DEPTNO=30);
-- 20.  FORD와 업무도 월급도 같은 사원의 모든 필드
SELECT * FROM EMP 
    WHERE (JOB, SAL) = (SELECT JOB, SAL FROM EMP 
                        WHERE ENAME='FORD') AND ENAME != 'FORD';
-- 21. 이름이 JONES인 직원의 JOB과 같거나 FORD의 SAL 이상을 받는 사원의 정보를
--이름, 업무, 부서번호, 급여
    -- 단, 업무별 알파벳 순, 월급이 많은 순으로 출력
SELECT JOB FROM EMP WHERE ENAME='JONES';--단일행 서브쿼리
SELECT SAL FROM EMP WHERE ENAME='FORD'; --단일행 서브쿼리
SELECT ENAME, JOB, DEPTNO, SAL FROM EMP 
    WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME='JONES') OR 
        SAL>=(SELECT SAL FROM EMP WHERE ENAME='FORD')
    ORDER BY JOB, SAL DESC;
-- 22. SCOTT 또는 WARD와 월급이 같은 사원의 정보를 이름,업무,급여
SELECT ENAME, JOB, SAL FROM EMP 
    WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME='SCOTT' OR ENAME='WARD') 
        AND ENAME NOT IN ('SCOTT', 'WARD');
        
SELECT ENAME, JOB, SAL FROM EMP 
    WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME IN ('SCOTT','WARD')) 
        AND ENAME NOT IN ('SCOTT','WARD');
-- 23. CHICAGO에서 근무하는 사원과 같은 업무를 하는 사원들의 이름,업무
SELECT ENAME, JOB FROM EMP 
    WHERE JOB IN (SELECT JOB FROM EMP E, DEPT D 
                    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO');
-- 24. 부서별로 월급이 평균 월급보다 높은 사원을 사번, 이름, 급여
SELECT EMPNO, ENAME, SAL
  FROM EMP E
  WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
 -- 부서번호와 부서별 평균을 추가 
SELECT EMPNO, ENAME, SAL, DEPTNO, 
        (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO)
  FROM EMP E
  WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
  
-- 25. 업무별로 평균 월급보다 적은 월급을 받는 사원을 부서번호, 이름, 급여

-- 26. 적어도 한 명 이상으로부터 보고를 받을 수 있는 사원을 업무, 이름, 사번, 부서번호를 출력(단, 부서번호 순으로 오름차순 정렬)

-- 27.  말단 사원의 사번, 이름, 업무, 부서번호